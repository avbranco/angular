# Filters added to this controller apply to all controllers in the application.
# Likewise, all the methods added will be available for all controllers.

class ApplicationController < ActionController::Base
  helper :all # include all helpers, all the time

  # See ActionController::RequestForgeryProtection for details
  # Uncomment the :secret if you're not using the cookie session store
  protect_from_forgery # :secret => '081cbf2be392ebcc124c6e6cfbd1059c'
  
  # See ActionController::Base for details 
  # Uncomment this to filter the contents of submitted sensitive data parameters
  # from your application log (in this case, all fields with names like "password"). 
  # filter_parameter_logging :password
  
    def login
    session[:user_id] = nil
    if request.post?
      user = User.authenticate(params[:email], params[:password])
      if user
        session[:user_id] = user.id
      else
        flash[:login_notice] = "Invalid name/password combination"
      end
      redirect_to params[:url]
    else
      redirect_to '/users'
    end
  end
  
  def logout
    session[:user_id] = nil
    session[:album_id] = nil
    redirect_to '/users'
  end
  
  helper_method :find_user
  def find_user(id)
    User.find(:first, :conditions => [ "id = ?", id ])
  end
  
  helper_method :current_user
  def current_user
    @current_user ||= (session[:user_id] ? find_user(session[:user_id]) : nil)
  end
  
  helper_method :same_user?
  def same_user?(user)
    logged_user = current_user
    return true if logged_user && logged_user.id == user.id
    false
  end

  
end
